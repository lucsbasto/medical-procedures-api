{
  "openapi": "3.0.0",
  "paths": {
    "/api/doctors": {
      "post": {
        "operationId": "DoctorsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDoctorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Médico criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dados de requisição inválidos."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        },
        "tags": [
          "Doctors"
        ]
      },
      "get": {
        "operationId": "DoctorsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de todos os médicos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        },
        "tags": [
          "Doctors"
        ]
      }
    },
    "/api/doctors/{id}": {
      "get": {
        "operationId": "DoctorsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes de um médico específico.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ID do médico em formato inválido."
          },
          "404": {
            "description": "Médico não encontrado."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        },
        "tags": [
          "Doctors"
        ]
      }
    },
    "/api/patients": {
      "post": {
        "operationId": "PatientsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientInputDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Paciente criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePatientResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dados de requisição inválidos."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        },
        "tags": [
          "Patients"
        ]
      },
      "get": {
        "operationId": "PatientsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de todos os pacientes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllPatientResponseDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        },
        "tags": [
          "Patients"
        ]
      }
    },
    "/api/patients/{id}": {
      "get": {
        "operationId": "PatientsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes de um paciente específico.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetByIdPatientResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ID do paciente em formato inválido."
          },
          "404": {
            "description": "Paciente não encontrado."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        },
        "tags": [
          "Patients"
        ]
      },
      "patch": {
        "operationId": "PatientsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Paciente atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePatientResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dados de requisição inválidos."
          },
          "404": {
            "description": "Paciente não encontrado."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        },
        "tags": [
          "Patients"
        ]
      }
    },
    "/api/medical-procedures": {
      "post": {
        "operationId": "MedicalProceduresController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMedicalProcedureInputDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Medical procedure registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMedicalProcedureResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data."
          }
        },
        "tags": [
          "Medical Procedures"
        ]
      },
      "get": {
        "operationId": "MedicalProceduresController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of all medical procedures.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllMedicalProceduresResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Medical Procedures"
        ]
      }
    },
    "/api/medical-procedures/{id}": {
      "get": {
        "operationId": "MedicalProceduresController_findById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Medical procedure found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMedicalProcedureByIdResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format."
          },
          "404": {
            "description": "Medical procedure not found."
          }
        },
        "tags": [
          "Medical Procedures"
        ]
      },
      "put": {
        "operationId": "MedicalProceduresController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMedicalProcedureInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Medical procedure updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateMedicalProcedureResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or ID format."
          },
          "404": {
            "description": "Medical procedure not found."
          }
        },
        "tags": [
          "Medical Procedures"
        ]
      },
      "delete": {
        "operationId": "MedicalProceduresController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Medical procedure deleted successfully."
          },
          "400": {
            "description": "Invalid ID format."
          },
          "404": {
            "description": "Medical procedure not found."
          }
        },
        "tags": [
          "Medical Procedures"
        ]
      }
    }
  },
  "info": {
    "title": "Medical Procedures",
    "description": "This is the OpenAPI specifications for the Medical Procedures API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateDoctorDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do médico.",
            "example": "Dr. João Silva",
            "minLength": 3,
            "maxLength": 255
          },
          "crm": {
            "type": "string",
            "description": "Número do CRM do médico (ex: SP-12345). Caracteres especiais e espaços serão removidos antes da validação.",
            "example": "SP-12345",
            "minLength": 5,
            "maxLength": 20
          },
          "specialty": {
            "type": "string",
            "description": "Especialidade do médico.",
            "example": "Cardiologia",
            "minLength": 3,
            "maxLength": 100
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone do doutor.",
            "example": "63999999999",
            "minLength": 8,
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "description": "Email do doutor (opcional).",
            "example": "joao.silva@email.com",
            "maxLength": 255
          }
        },
        "required": [
          "name",
          "crm",
          "specialty",
          "phone"
        ]
      },
      "DoctorResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único do médico (UUID)."
          },
          "name": {
            "type": "string",
            "description": "Nome completo do médico."
          },
          "crm": {
            "type": "string",
            "description": "Número do CRM do médico."
          },
          "specialty": {
            "type": "string",
            "description": "Especialidade do médico."
          }
        },
        "required": [
          "id",
          "name",
          "crm",
          "specialty"
        ]
      },
      "CreatePatientInputDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do paciente.",
            "example": "João da Silva",
            "minLength": 3,
            "maxLength": 255
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone do paciente.",
            "example": "63999999999",
            "minLength": 8,
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "description": "Email do paciente (opcional).",
            "example": "joao.silva@email.com",
            "maxLength": 255
          }
        },
        "required": [
          "name",
          "phone"
        ]
      },
      "CreatePatientResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único do paciente.",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do paciente.",
            "example": "João da Silva"
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone do paciente.",
            "example": "63999999999"
          },
          "email": {
            "type": "string",
            "description": "Email do paciente (opcional).",
            "example": "joao.silva@email.com"
          }
        },
        "required": [
          "id",
          "name",
          "phone"
        ]
      },
      "GetAllPatientResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único do paciente.",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do paciente.",
            "example": "João da Silva"
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone do paciente.",
            "example": "63999999999"
          },
          "email": {
            "type": "string",
            "description": "Email do paciente (opcional).",
            "example": "joao.silva@email.com"
          }
        },
        "required": [
          "id",
          "name",
          "phone"
        ]
      },
      "GetByIdPatientResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único do paciente.",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do paciente.",
            "example": "João da Silva"
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone do paciente.",
            "example": "63999999999"
          },
          "email": {
            "type": "string",
            "description": "Email do paciente (opcional).",
            "example": "joao.silva@email.com"
          }
        },
        "required": [
          "id",
          "name",
          "phone"
        ]
      },
      "UpdatePatientInputDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do paciente (opcional).",
            "example": "Maria Souza",
            "minLength": 3,
            "maxLength": 255
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone do paciente (opcional).",
            "example": "63888888888",
            "minLength": 8,
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "description": "Email do paciente (opcional).",
            "example": "maria.souza@email.com",
            "maxLength": 255
          }
        }
      },
      "UpdatePatientResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único do paciente.",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do paciente.",
            "example": "João da Silva"
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone do paciente.",
            "example": "63999999999"
          },
          "email": {
            "type": "string",
            "description": "Email do paciente (opcional).",
            "example": "joao.silva@email.com"
          }
        },
        "required": [
          "id",
          "name",
          "phone"
        ]
      },
      "CreateMedicalProcedureInputDto": {
        "type": "object",
        "properties": {
          "doctorId": {
            "type": "string",
            "description": "ID do médico responsável pelo procedimento."
          },
          "patientId": {
            "type": "string",
            "description": "ID do paciente que realizou o procedimento."
          },
          "procedureName": {
            "type": "string",
            "description": "Nome do procedimento médico."
          },
          "procedureDate": {
            "format": "date-time",
            "type": "string",
            "description": "Data e hora do procedimento."
          },
          "procedureValue": {
            "type": "number",
            "description": "Valor do procedimento."
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "PAID",
              "PENDING",
              "DENIED"
            ],
            "description": "Status do pagamento."
          },
          "denialReason": {
            "type": "string",
            "description": "Motivo da recusa do pagamento (opcional)."
          }
        },
        "required": [
          "doctorId",
          "patientId",
          "procedureName",
          "procedureDate",
          "procedureValue",
          "paymentStatus"
        ]
      },
      "CreateMedicalProcedureResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do procedimento médico."
          },
          "doctorId": {
            "type": "string",
            "description": "ID do médico responsável pelo procedimento."
          },
          "patientId": {
            "type": "string",
            "description": "ID do paciente que realizou o procedimento."
          },
          "procedureName": {
            "type": "string",
            "description": "Nome do procedimento médico."
          },
          "procedureDate": {
            "format": "date-time",
            "type": "string",
            "description": "Data e hora do procedimento."
          },
          "procedureValue": {
            "type": "number",
            "description": "Valor do procedimento."
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "PAID",
              "PENDING",
              "DENIED"
            ],
            "description": "Status do pagamento."
          },
          "denialReason": {
            "type": "string",
            "nullable": true,
            "description": "Motivo da recusa do pagamento (opcional)."
          }
        },
        "required": [
          "id",
          "doctorId",
          "patientId",
          "procedureName",
          "procedureDate",
          "procedureValue",
          "paymentStatus",
          "denialReason"
        ]
      },
      "GetMedicalProcedureByIdResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do procedimento médico."
          },
          "doctorId": {
            "type": "string",
            "description": "ID do médico responsável pelo procedimento."
          },
          "patientId": {
            "type": "string",
            "description": "ID do paciente que realizou o procedimento."
          },
          "procedureName": {
            "type": "string",
            "description": "Nome do procedimento médico."
          },
          "procedureDate": {
            "format": "date-time",
            "type": "string",
            "description": "Data e hora do procedimento."
          },
          "procedureValue": {
            "type": "number",
            "description": "Valor do procedimento."
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "PAID",
              "PENDING",
              "DENIED"
            ],
            "description": "Status do pagamento."
          },
          "denialReason": {
            "type": "string",
            "nullable": true,
            "description": "Motivo da recusa do pagamento (opcional)."
          }
        },
        "required": [
          "id",
          "doctorId",
          "patientId",
          "procedureName",
          "procedureDate",
          "procedureValue",
          "paymentStatus",
          "denialReason"
        ]
      },
      "GetAllMedicalProceduresResponseDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateMedicalProcedureInputDto": {
        "type": "object",
        "properties": {
          "doctorId": {
            "type": "string",
            "description": "ID do médico responsável pelo procedimento."
          },
          "patientId": {
            "type": "string",
            "description": "ID do paciente que realizou o procedimento."
          },
          "procedureName": {
            "type": "string",
            "description": "Nome do procedimento médico."
          },
          "procedureDate": {
            "format": "date-time",
            "type": "string",
            "description": "Data e hora do procedimento."
          },
          "procedureValue": {
            "type": "number",
            "description": "Valor do procedimento."
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "PAID",
              "PENDING",
              "DENIED"
            ],
            "description": "Status do pagamento."
          },
          "denialReason": {
            "type": "string",
            "nullable": true,
            "description": "Motivo da recusa do pagamento (opcional)."
          }
        }
      },
      "UpdateMedicalProcedureResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do procedimento médico."
          },
          "doctorId": {
            "type": "string",
            "description": "ID do médico responsável pelo procedimento."
          },
          "patientId": {
            "type": "string",
            "description": "ID do paciente que realizou o procedimento."
          },
          "procedureName": {
            "type": "string",
            "description": "Nome do procedimento médico."
          },
          "procedureDate": {
            "format": "date-time",
            "type": "string",
            "description": "Data e hora do procedimento."
          },
          "procedureValue": {
            "type": "number",
            "description": "Valor do procedimento."
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "PAID",
              "PENDING",
              "DENIED"
            ],
            "description": "Status do pagamento."
          },
          "denialReason": {
            "type": "string",
            "nullable": true,
            "description": "Motivo da recusa do pagamento (opcional)."
          }
        },
        "required": [
          "id",
          "doctorId",
          "patientId",
          "procedureName",
          "procedureDate",
          "procedureValue",
          "paymentStatus",
          "denialReason"
        ]
      }
    }
  }
}